SELECT * FROM Worker;
SELECT * FROM Bonus;
SELECT * FROM Title;

#Q-1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the alias name <WORKER_NAME>.
SELECT FIRST_NAME as WORKER_NAME FROM Worker;

#Q-2. Write an SQL query to fetch “FIRST_NAME” from the Worker table in upper case.
SELECT upper(FIRST_NAME) FROM Worker;

#Q-3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker table.
SELECT DISTINCT DEPARTMENT FROM Worker;

#Q-4. Write an SQL query to print the first three characters of  FIRST_NAME from the Worker table.
SELECT left(FIRST_NAME,3) FROM Worker;
#website ans- Select substring(FIRST_NAME,1,3) from Worker;, does the same

#Q-5. Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from the Worker table.
#couldnt do Select INSTR(FIRST_NAME, BINARY'a') from Worker where FIRST_NAME = 'Amitabh';

#Q-6. Write an SQL query to print the FIRST_NAME from the Worker table after removing white spaces from the right side.
SELECT rtrim(FIRST_NAME) FROM Worker;

#Q-7. Write an SQL query to print the DEPARTMENT from the Worker table after removing white spaces from the left side.
SELECT ltrim(DEPARTMENT) FROM Worker;

#Q-8. Write an SQL query that fetches the unique values of DEPARTMENT from the Worker table and prints its length.
SELECT DISTINCT length(DEPARTMENT) FROM Worker;

#Q-9. Write an SQL query to print the FIRST_NAME from the Worker table after replacing ‘a’ with ‘A’.
SELECT replace(FIRST_NAME, 'a', 'A') FROM Worker;

#Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME from the Worker table into a single column COMPLETE_NAME. A space char should separate them.
SELECT concat(FIRST_NAME,' ',LAST_NAME AS COMPLETE_NAME) FROM Worker;

#Q-11. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.
SELECT * FROM Worker
ORDER BY FIRST_NAME ASC;
#Q-12. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending and DEPARTMENT Descending.
SELECT * FROM Worker
ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

#Q-13. Write an SQL query to print details for Workers with the first names “Vipul” and “Satish” from the Worker table.
SELECT * FROM Worker
WHERE FIRST_NAME = 'VIPUL' or FIRST_NAME = 'Satish';
#Select * from Worker where FIRST_NAME in ('Vipul','Satish');

#Q-14. Write an SQL query to print details of workers excluding first names, “Vipul” and “Satish” from the Worker table.
SELECT * FROM Worker 
WHERE FIRST_NAME NOT IN ('Vipul','Satish');

#Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin”.
SELECT * FROM Worker
Where DEPARTMENT = 'Admin';
#Select * from Worker where DEPARTMENT like 'Admin%';

#Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains ‘a’.
SELECT * FROM Worker
WHERE FIRST_NAME like '%a%';

#Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘a’.
SELECT * FROM Worker
WHERE Right(FIRST_NAME,1) = 'a';
#Select * from Worker where FIRST_NAME like '%a';

#Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with ‘h’ and contains six alphabets.
SELECT * FROM Worker
WHERE FIRST_NAME like '%h' AND length(FIRST_NAME) = 6;
#Select * from Worker where FIRST_NAME like '_____h';

#Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.
SELECT * FROM Worker
WHERE SALARY >= 100000 and SALARY <= 500000;
#Select * from Worker where SALARY between 100000 and 500000;

#Q-20. Write an SQL query to print details of the Workers who joined in Feb’2014.
SELECT * FROM Worker
Where year(JOINING_DATE) = 2014 AND month(JOINING_DATE) = 2;

#Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.
SELECT count(WORKER_ID) FROM Worker
WHERE DEPARTMENT = 'Admin';

#Q-22. Write an SQL query to fetch worker names with salaries >= 50000 and <= 100000.
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) as FULL_NAME,SALARY FROM Worker
Where SALARY >=50000 and SALARY <= 100000;

#SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) As Worker_Name, Salary
#FROM worker 
#WHERE WORKER_ID IN 
#(SELECT WORKER_ID FROM worker 
#WHERE Salary BETWEEN 50000 AND 100000);

#Q-23. Write an SQL query to fetch the no. of workers for each department in descending order.
SELECT COUNT(WORKER_ID) AS WORKER_COUNT ,DEPARTMENT FROM Worker 
GROUP BY DEPARTMENT
ORDER BY WORKER_COUNT DESC;

#Q-24. Write an SQL query to print details of the Workers who are also Managers.
SELECT * FROM Worker;
SELECT * FROM Title
ORDER BY WORKER_REF_ID;

SELECT * FROM Worker
JOIN Title 
ON WORKER_ID = WORKER_REF_ID
WHERE WORKER_TITLE = 'Manager';

#Q-25. Write an SQL query to fetch duplicate records having matching data in some fields of a table.
/* 
SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*)
FROM Title
GROUP BY WORKER_TITLE, AFFECTED_FROM
HAVING COUNT(*) > 1; */

#Q-26. Write an SQL query to show only odd rows from a table.
SELECT * FROM Worker
WHERE WORKER_ID % 2 != 0;
#SELECT * FROM Worker WHERE MOD (WORKER_ID, 2) <> 0;
#Q-27. Write an SQL query to show only even rows from a table.
SELECT * FROM Worker
WHERE WORKER_ID % 2 = 0;

#Q-28. Write an SQL query to clone a new table from another table.
CREATE TABLE WorkerClone LIKE Worker;
/* SELECT * INTO WorkerClone FROM Worker;
SELECT * INTO WorkerClone FROM Worker WHERE 1 = 0; */
CREATE TABLE WorkerClone LIKE Worker;

#Q-29. Write an SQL query to fetch intersecting records of two tables.
/* (SELECT * FROM Worker)
INTERSECT
(SELECT * FROM WorkerClone); */

#Q-30. Write an SQL query to show records from one table that another table does not have.
/* SELECT * FROM Worker
MINUS
SELECT * FROM Title; */

#Q-31. Write an SQL query to show the current date and time.
SELECT NOW();
#SELECT CURDATE(); just date

#Q-32. Write an SQL query to show the top n (say 10) records of a table.
SELECT * FROM Worker
LIMIT 10;

#Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.
SELECT * FROM Worker
ORDER BY SALARY DESC
LIMIT 1 OFFSET 4;

#Q-34. Write an SQL query to determine the 5th highest salary without using the TOP or limit method.
SELECT Salary
FROM Worker W1
WHERE 4 = (
 SELECT COUNT( DISTINCT ( W2.Salary ) )
 FROM Worker W2
 WHERE W2.Salary >= W1.Salary
 );
 
#Q-35. Write an SQL query to fetch the list of employees with the same salary.
SELECT * FROM Worker
WHERE SALARY = SALARY;
SELECT DISTINCT W.WORKER_ID, W.FIRST_NAME, W.Salary 
FROM Worker W, Worker W1 
WHERE W.Salary = W1.Salary 
AND W.WORKER_ID != W1.WORKER_ID;

#Q-36. Write an SQL query to show the second-highest salary from a table.
SELECT DISTINCT SALARY FROM Worker
ORDER BY SALARY DESC
LIMIT 1 OFFSET 1;
#Select max(Salary) from Worker 
#where Salary not in (Select max(Salary) from Worker);

#Q-37. Write an SQL query to show one row twice in the results from a table.
SELECT FIRST_NAME, DEPARTMENT 
FROM Worker W 
WHERE W.DEPARTMENT = 'HR'
UNION ALL
SELECT FIRST_NAME, DEPARTMENT 
FROM Worker W1 
WHERE W1.DEPARTMENT = 'HR';

#Q-38. Write an SQL query to fetch intersecting records of two tables.
/* (SELECT * FROM Worker)
INTERSECT
(SELECT * FROM WorkerClone); */

#Q-39. Write an SQL query to fetch the first 50% of records from a table.
SELECT * FROM Worker
WHERE WORKER_ID <= (SELECT count(WORKER_ID)/2 FROM Worker);

#Q-40. Write an SQL query to fetch the departments that have less than five people in them.
WITH cte as(
SELECT DEPARTMENT, count(DEPARTMENT) as DEP_COUNT 
FROM Worker
GROUP BY DEPARTMENT)
SELECT * FROM CTE
WHERE DEP_COUNT < 5;

SELECT DEPARTMENT, COUNT(WORKER_ID) as 'Number of Workers' 
FROM Worker 
GROUP BY DEPARTMENT 
HAVING COUNT(WORKER_ID) < 5;

#Q-41. Write an SQL query to show all departments along with the number of people in there.
#prev question solves

#Q-42. Write an SQL query to show the last record from a table.
SELECT * FROM Worker
ORDER BY WORKER_ID DESC 
LIMIT 1;

/* Select * from Worker where WORKER_ID = (SELECT max(WORKER_ID) from Worker); */

#Q-43. Write an SQL query to fetch the first row of a table.
SELECT * FROM Worker
ORDER BY WORKER_ID ASC
LIMIT 1;

/* Select * from Worker where WORKER_ID = (SELECT min(WORKER_ID) from Worker); */

#Q-44. Write an SQL query to fetch the last five records from a table.
SELECT * FROM Worker
ORDER BY WORKER_ID DESC 
LIMIT 5;

/* SELECT * FROM Worker WHERE WORKER_ID <=5
UNION
SELECT * FROM (SELECT * FROM Worker W order by W.WORKER_ID DESC) AS W1 WHERE W1.WORKER_ID <=5; */

#Q-45. Write an SQL query to print the name of employees having the highest salary in each department.
SELECT w.FIRST_NAME,w.LAST_NAME, w.DEPARTMENT,w.SALARY
FROM Worker w
JOIN ( 
	SELECT DEPARTMENT, MAX(SALARY) as MAX_SALARY
    FROM worker
    GROUP BY DEPARTMENT
    ) subq
ON w.DEPARTMENT = subq.DEPARTMENT AND w.SALARY= subq.MAX_SALARY;

#Q-46. Write an SQL query to fetch three max salaries from a table.
WITH cte as (
SELECT w.FIRST_NAME,w.LAST_NAME, w.DEPARTMENT,w.SALARY
FROM Worker w
JOIN ( 
	SELECT DEPARTMENT, MAX(SALARY) as MAX_SALARY
    FROM worker
    GROUP BY DEPARTMENT
    ) subq
ON w.DEPARTMENT = subq.DEPARTMENT AND w.SALARY= subq.MAX_SALARY)
SELECT * FROM cte
order by SALARY DESC
limit 3;

-- MUCH EASIER WAY
SELECT * FROM Worker
ORDER BY SALARY DESC
LIMIT 3;

/* SELECT distinct Salary 
from worker a 
WHERE 3 >= (SELECT count(distinct Salary)
from worker b WHERE a.Salary <= b.Salary) 
order by a.Salary desc; */

#Q-47. Write an SQL query to fetch three min salaries from a table.
SELECT * FROM Worker
ORDER BY SALARY ASC
LIMIT 3;

#Q-48. Write an SQL query to fetch nth max salaries from a table.
SELECT distinct Salary 
from worker a 
WHERE n >= (SELECT count(distinct Salary) 
from worker b WHERE a.Salary <= b.Salary) 
order by a.Salary desc;
-- this seems easier, replace numbers with desired output
SELECT * FROM Worker
ORDER BY SALARY ASC
LIMIT 1 OFFSET n-1;

#Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.
SELECT DEPARTMENT, sum(SALARY)
FROM Worker
GROUP BY DEPARTMENT;

#Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM worker
WHERE SALARY= (SELECT max(SALARY)
	FROM Worker);



